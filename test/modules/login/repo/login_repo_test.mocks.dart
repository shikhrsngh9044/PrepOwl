// Mocks generated by Mockito 5.3.2 from annotations
// in prepowl/test/modules/login/repo/login_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:firebase_auth/firebase_auth.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prepowl/_utils/entities/api_response.dart' as _i5;
import 'package:prepowl/modules/login/model/user_dto.dart' as _i6;

import 'login_repo_test.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginRepoImpTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepoImpTest extends _i1.Mock implements _i3.LoginRepoImpTest {
  MockLoginRepoImpTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>> facebookLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #facebookLogin,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserDTO>(
          this,
          Invocation.method(
            #facebookLogin,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> facebookLogout() =>
      (super.noSuchMethod(
        Invocation.method(
          #facebookLogout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #facebookLogout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>> googleLogin() =>
      (super.noSuchMethod(
        Invocation.method(
          #googleLogin,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>>.value(
            _FakeEither_0<_i5.Failure, _i6.UserDTO>(
          this,
          Invocation.method(
            #googleLogin,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.UserDTO>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>> googleLogout() =>
      (super.noSuchMethod(
        Invocation.method(
          #googleLogout,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>.value(
            _FakeEither_0<_i5.Failure, _i2.Unit>(
          this,
          Invocation.method(
            #googleLogout,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i2.Unit>>);
  @override
  _i4.Future<void> verifyPhone({
    required String? phoneNumber,
    required dynamic Function(_i7.PhoneAuthCredential)? verificationCompleted,
    required dynamic Function(_i7.FirebaseAuthException)? verificationFailed,
    required dynamic Function(
      String,
      int?,
    )?
        codeSent,
    required dynamic Function(String)? codeAutoRetrievalTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #verifyPhone,
          [],
          {
            #phoneNumber: phoneNumber,
            #verificationCompleted: verificationCompleted,
            #verificationFailed: verificationFailed,
            #codeSent: codeSent,
            #codeAutoRetrievalTimeout: codeAutoRetrievalTimeout,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
