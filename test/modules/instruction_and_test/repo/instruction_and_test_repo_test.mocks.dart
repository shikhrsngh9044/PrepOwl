// Mocks generated by Mockito 5.3.2 from annotations
// in prepowl/test/modules/instruction_and_test/repo/instruction_and_test_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:dartz/dartz.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:prepowl/_utils/entities/api_response.dart' as _i6;
import 'package:prepowl/modules/instruction_and_test/model/test_dto.dart'
    as _i7;

import 'instruction_and_test_repo_test.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseFirestore_0 extends _i1.SmartFake
    implements _i2.FirebaseFirestore {
  _FakeFirebaseFirestore_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [InstructionAndTestRepositoryImplTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockInstructionAndTestRepositoryImplTest extends _i1.Mock
    implements _i4.InstructionAndTestRepositoryImplTest {
  MockInstructionAndTestRepositoryImplTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseFirestore get firestore => (super.noSuchMethod(
        Invocation.getter(#firestore),
        returnValue: _FakeFirebaseFirestore_0(
          this,
          Invocation.getter(#firestore),
        ),
      ) as _i2.FirebaseFirestore);
  @override
  set firestore(_i2.FirebaseFirestore? _firestore) => super.noSuchMethod(
        Invocation.setter(
          #firestore,
          _firestore,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.TestDTO>>>
      getInstructionsAndQuestion(String? testId) => (super.noSuchMethod(
            Invocation.method(
              #getInstructionsAndQuestion,
              [testId],
            ),
            returnValue:
                _i5.Future<_i3.Either<_i6.Failure, List<_i7.TestDTO>>>.value(
                    _FakeEither_1<_i6.Failure, List<_i7.TestDTO>>(
              this,
              Invocation.method(
                #getInstructionsAndQuestion,
                [testId],
              ),
            )),
          ) as _i5.Future<_i3.Either<_i6.Failure, List<_i7.TestDTO>>>);
}
